/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/__root'
import { Route as OnboardingLayoutImport } from './app/onboarding/layout'
import { Route as PageImport } from './app/page'
import { Route as LoginPageImport } from './app/login/page'
import { Route as IntroPageImport } from './app/intro/page'
import { Route as OnboardingTermsPageImport } from './app/onboarding/terms/page'
import { Route as OnboardingPartnerCodePageImport } from './app/onboarding/partner-code/page'
import { Route as OnboardingNicknamePageImport } from './app/onboarding/nickname/page'
import { Route as OnboardingMyCodePageImport } from './app/onboarding/my-code/page'
import { Route as OnboardingCompletePageImport } from './app/onboarding/complete/page'
import { Route as OnboardingAnniversaryPageImport } from './app/onboarding/anniversary/page'

// Create/Update Routes

const OnboardingLayoutRoute = OnboardingLayoutImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const PageRoute = PageImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginPageRoute = LoginPageImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const IntroPageRoute = IntroPageImport.update({
  id: '/intro/',
  path: '/intro/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingTermsPageRoute = OnboardingTermsPageImport.update({
  id: '/terms/',
  path: '/terms/',
  getParentRoute: () => OnboardingLayoutRoute,
} as any)

const OnboardingPartnerCodePageRoute = OnboardingPartnerCodePageImport.update({
  id: '/partner-code/',
  path: '/partner-code/',
  getParentRoute: () => OnboardingLayoutRoute,
} as any)

const OnboardingNicknamePageRoute = OnboardingNicknamePageImport.update({
  id: '/nickname/',
  path: '/nickname/',
  getParentRoute: () => OnboardingLayoutRoute,
} as any)

const OnboardingMyCodePageRoute = OnboardingMyCodePageImport.update({
  id: '/my-code/',
  path: '/my-code/',
  getParentRoute: () => OnboardingLayoutRoute,
} as any)

const OnboardingCompletePageRoute = OnboardingCompletePageImport.update({
  id: '/complete/',
  path: '/complete/',
  getParentRoute: () => OnboardingLayoutRoute,
} as any)

const OnboardingAnniversaryPageRoute = OnboardingAnniversaryPageImport.update({
  id: '/anniversary/',
  path: '/anniversary/',
  getParentRoute: () => OnboardingLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PageImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingLayoutImport
      parentRoute: typeof rootRoute
    }
    '/intro/': {
      id: '/intro/'
      path: '/intro'
      fullPath: '/intro'
      preLoaderRoute: typeof IntroPageImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginPageImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/anniversary/': {
      id: '/onboarding/anniversary/'
      path: '/anniversary'
      fullPath: '/onboarding/anniversary'
      preLoaderRoute: typeof OnboardingAnniversaryPageImport
      parentRoute: typeof OnboardingLayoutImport
    }
    '/onboarding/complete/': {
      id: '/onboarding/complete/'
      path: '/complete'
      fullPath: '/onboarding/complete'
      preLoaderRoute: typeof OnboardingCompletePageImport
      parentRoute: typeof OnboardingLayoutImport
    }
    '/onboarding/my-code/': {
      id: '/onboarding/my-code/'
      path: '/my-code'
      fullPath: '/onboarding/my-code'
      preLoaderRoute: typeof OnboardingMyCodePageImport
      parentRoute: typeof OnboardingLayoutImport
    }
    '/onboarding/nickname/': {
      id: '/onboarding/nickname/'
      path: '/nickname'
      fullPath: '/onboarding/nickname'
      preLoaderRoute: typeof OnboardingNicknamePageImport
      parentRoute: typeof OnboardingLayoutImport
    }
    '/onboarding/partner-code/': {
      id: '/onboarding/partner-code/'
      path: '/partner-code'
      fullPath: '/onboarding/partner-code'
      preLoaderRoute: typeof OnboardingPartnerCodePageImport
      parentRoute: typeof OnboardingLayoutImport
    }
    '/onboarding/terms/': {
      id: '/onboarding/terms/'
      path: '/terms'
      fullPath: '/onboarding/terms'
      preLoaderRoute: typeof OnboardingTermsPageImport
      parentRoute: typeof OnboardingLayoutImport
    }
  }
}

// Create and export the route tree

interface OnboardingLayoutRouteChildren {
  OnboardingAnniversaryPageRoute: typeof OnboardingAnniversaryPageRoute
  OnboardingCompletePageRoute: typeof OnboardingCompletePageRoute
  OnboardingMyCodePageRoute: typeof OnboardingMyCodePageRoute
  OnboardingNicknamePageRoute: typeof OnboardingNicknamePageRoute
  OnboardingPartnerCodePageRoute: typeof OnboardingPartnerCodePageRoute
  OnboardingTermsPageRoute: typeof OnboardingTermsPageRoute
}

const OnboardingLayoutRouteChildren: OnboardingLayoutRouteChildren = {
  OnboardingAnniversaryPageRoute: OnboardingAnniversaryPageRoute,
  OnboardingCompletePageRoute: OnboardingCompletePageRoute,
  OnboardingMyCodePageRoute: OnboardingMyCodePageRoute,
  OnboardingNicknamePageRoute: OnboardingNicknamePageRoute,
  OnboardingPartnerCodePageRoute: OnboardingPartnerCodePageRoute,
  OnboardingTermsPageRoute: OnboardingTermsPageRoute,
}

const OnboardingLayoutRouteWithChildren = OnboardingLayoutRoute._addFileChildren(OnboardingLayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof PageRoute
  '/onboarding': typeof OnboardingLayoutRouteWithChildren
  '/intro': typeof IntroPageRoute
  '/login': typeof LoginPageRoute
  '/onboarding/anniversary': typeof OnboardingAnniversaryPageRoute
  '/onboarding/complete': typeof OnboardingCompletePageRoute
  '/onboarding/my-code': typeof OnboardingMyCodePageRoute
  '/onboarding/nickname': typeof OnboardingNicknamePageRoute
  '/onboarding/partner-code': typeof OnboardingPartnerCodePageRoute
  '/onboarding/terms': typeof OnboardingTermsPageRoute
}

export interface FileRoutesByTo {
  '/': typeof PageRoute
  '/onboarding': typeof OnboardingLayoutRouteWithChildren
  '/intro': typeof IntroPageRoute
  '/login': typeof LoginPageRoute
  '/onboarding/anniversary': typeof OnboardingAnniversaryPageRoute
  '/onboarding/complete': typeof OnboardingCompletePageRoute
  '/onboarding/my-code': typeof OnboardingMyCodePageRoute
  '/onboarding/nickname': typeof OnboardingNicknamePageRoute
  '/onboarding/partner-code': typeof OnboardingPartnerCodePageRoute
  '/onboarding/terms': typeof OnboardingTermsPageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof PageRoute
  '/onboarding': typeof OnboardingLayoutRouteWithChildren
  '/intro/': typeof IntroPageRoute
  '/login/': typeof LoginPageRoute
  '/onboarding/anniversary/': typeof OnboardingAnniversaryPageRoute
  '/onboarding/complete/': typeof OnboardingCompletePageRoute
  '/onboarding/my-code/': typeof OnboardingMyCodePageRoute
  '/onboarding/nickname/': typeof OnboardingNicknamePageRoute
  '/onboarding/partner-code/': typeof OnboardingPartnerCodePageRoute
  '/onboarding/terms/': typeof OnboardingTermsPageRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/onboarding'
    | '/intro'
    | '/login'
    | '/onboarding/anniversary'
    | '/onboarding/complete'
    | '/onboarding/my-code'
    | '/onboarding/nickname'
    | '/onboarding/partner-code'
    | '/onboarding/terms'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/onboarding'
    | '/intro'
    | '/login'
    | '/onboarding/anniversary'
    | '/onboarding/complete'
    | '/onboarding/my-code'
    | '/onboarding/nickname'
    | '/onboarding/partner-code'
    | '/onboarding/terms'
  id:
    | '__root__'
    | '/'
    | '/onboarding'
    | '/intro/'
    | '/login/'
    | '/onboarding/anniversary/'
    | '/onboarding/complete/'
    | '/onboarding/my-code/'
    | '/onboarding/nickname/'
    | '/onboarding/partner-code/'
    | '/onboarding/terms/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PageRoute: typeof PageRoute
  OnboardingLayoutRoute: typeof OnboardingLayoutRouteWithChildren
  IntroPageRoute: typeof IntroPageRoute
  LoginPageRoute: typeof LoginPageRoute
}

const rootRouteChildren: RootRouteChildren = {
  PageRoute: PageRoute,
  OnboardingLayoutRoute: OnboardingLayoutRouteWithChildren,
  IntroPageRoute: IntroPageRoute,
  LoginPageRoute: LoginPageRoute,
}

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/onboarding",
        "/intro/",
        "/login/"
      ]
    },
    "/": {
      "filePath": "page.tsx"
    },
    "/onboarding": {
      "filePath": "onboarding/layout.tsx",
      "children": [
        "/onboarding/anniversary/",
        "/onboarding/complete/",
        "/onboarding/my-code/",
        "/onboarding/nickname/",
        "/onboarding/partner-code/",
        "/onboarding/terms/"
      ]
    },
    "/intro/": {
      "filePath": "intro/page.tsx"
    },
    "/login/": {
      "filePath": "login/page.tsx"
    },
    "/onboarding/anniversary/": {
      "filePath": "onboarding/anniversary/page.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/complete/": {
      "filePath": "onboarding/complete/page.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/my-code/": {
      "filePath": "onboarding/my-code/page.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/nickname/": {
      "filePath": "onboarding/nickname/page.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/partner-code/": {
      "filePath": "onboarding/partner-code/page.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/terms/": {
      "filePath": "onboarding/terms/page.tsx",
      "parent": "/onboarding"
    }
  }
}
ROUTE_MANIFEST_END */
