/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/__root'
import { Route as ChatLayoutImport } from './app/chat/layout'
import { Route as PageImport } from './app/page'
import { Route as LoginPageImport } from './app/login/page'
import { Route as IntroPageImport } from './app/intro/page'
import { Route as ChatPageImport } from './app/chat/page'
import { Route as OnboardingTermsPageImport } from './app/onboarding/terms/page'
import { Route as OnboardingPartnerCodePageImport } from './app/onboarding/partner-code/page'
import { Route as OnboardingNicknamePageImport } from './app/onboarding/nickname/page'
import { Route as OnboardingMyCodePageImport } from './app/onboarding/my-code/page'
import { Route as OnboardingCompletePageImport } from './app/onboarding/complete/page'
import { Route as OnboardingAnniversaryPageImport } from './app/onboarding/anniversary/page'

// Create/Update Routes

const ChatLayoutRoute = ChatLayoutImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any)

const PageRoute = PageImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginPageRoute = LoginPageImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const IntroPageRoute = IntroPageImport.update({
  id: '/intro/',
  path: '/intro/',
  getParentRoute: () => rootRoute,
} as any)

const ChatPageRoute = ChatPageImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatLayoutRoute,
} as any)

const OnboardingTermsPageRoute = OnboardingTermsPageImport.update({
  id: '/onboarding/terms/',
  path: '/onboarding/terms/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingPartnerCodePageRoute = OnboardingPartnerCodePageImport.update({
  id: '/onboarding/partner-code/',
  path: '/onboarding/partner-code/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingNicknamePageRoute = OnboardingNicknamePageImport.update({
  id: '/onboarding/nickname/',
  path: '/onboarding/nickname/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingMyCodePageRoute = OnboardingMyCodePageImport.update({
  id: '/onboarding/my-code/',
  path: '/onboarding/my-code/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingCompletePageRoute = OnboardingCompletePageImport.update({
  id: '/onboarding/complete/',
  path: '/onboarding/complete/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingAnniversaryPageRoute = OnboardingAnniversaryPageImport.update({
  id: '/onboarding/anniversary/',
  path: '/onboarding/anniversary/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PageImport
      parentRoute: typeof rootRoute
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatLayoutImport
      parentRoute: typeof rootRoute
    }
    '/chat/': {
      id: '/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof ChatPageImport
      parentRoute: typeof ChatLayoutImport
    }
    '/intro/': {
      id: '/intro/'
      path: '/intro'
      fullPath: '/intro'
      preLoaderRoute: typeof IntroPageImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginPageImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/anniversary/': {
      id: '/onboarding/anniversary/'
      path: '/onboarding/anniversary'
      fullPath: '/onboarding/anniversary'
      preLoaderRoute: typeof OnboardingAnniversaryPageImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/complete/': {
      id: '/onboarding/complete/'
      path: '/onboarding/complete'
      fullPath: '/onboarding/complete'
      preLoaderRoute: typeof OnboardingCompletePageImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/my-code/': {
      id: '/onboarding/my-code/'
      path: '/onboarding/my-code'
      fullPath: '/onboarding/my-code'
      preLoaderRoute: typeof OnboardingMyCodePageImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/nickname/': {
      id: '/onboarding/nickname/'
      path: '/onboarding/nickname'
      fullPath: '/onboarding/nickname'
      preLoaderRoute: typeof OnboardingNicknamePageImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/partner-code/': {
      id: '/onboarding/partner-code/'
      path: '/onboarding/partner-code'
      fullPath: '/onboarding/partner-code'
      preLoaderRoute: typeof OnboardingPartnerCodePageImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/terms/': {
      id: '/onboarding/terms/'
      path: '/onboarding/terms'
      fullPath: '/onboarding/terms'
      preLoaderRoute: typeof OnboardingTermsPageImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface ChatLayoutRouteChildren {
  ChatPageRoute: typeof ChatPageRoute
}

const ChatLayoutRouteChildren: ChatLayoutRouteChildren = {
  ChatPageRoute: ChatPageRoute,
}

const ChatLayoutRouteWithChildren = ChatLayoutRoute._addFileChildren(ChatLayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof PageRoute
  '/chat': typeof ChatLayoutRouteWithChildren
  '/chat/': typeof ChatPageRoute
  '/intro': typeof IntroPageRoute
  '/login': typeof LoginPageRoute
  '/onboarding/anniversary': typeof OnboardingAnniversaryPageRoute
  '/onboarding/complete': typeof OnboardingCompletePageRoute
  '/onboarding/my-code': typeof OnboardingMyCodePageRoute
  '/onboarding/nickname': typeof OnboardingNicknamePageRoute
  '/onboarding/partner-code': typeof OnboardingPartnerCodePageRoute
  '/onboarding/terms': typeof OnboardingTermsPageRoute
}

export interface FileRoutesByTo {
  '/': typeof PageRoute
  '/chat': typeof ChatPageRoute
  '/intro': typeof IntroPageRoute
  '/login': typeof LoginPageRoute
  '/onboarding/anniversary': typeof OnboardingAnniversaryPageRoute
  '/onboarding/complete': typeof OnboardingCompletePageRoute
  '/onboarding/my-code': typeof OnboardingMyCodePageRoute
  '/onboarding/nickname': typeof OnboardingNicknamePageRoute
  '/onboarding/partner-code': typeof OnboardingPartnerCodePageRoute
  '/onboarding/terms': typeof OnboardingTermsPageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof PageRoute
  '/chat': typeof ChatLayoutRouteWithChildren
  '/chat/': typeof ChatPageRoute
  '/intro/': typeof IntroPageRoute
  '/login/': typeof LoginPageRoute
  '/onboarding/anniversary/': typeof OnboardingAnniversaryPageRoute
  '/onboarding/complete/': typeof OnboardingCompletePageRoute
  '/onboarding/my-code/': typeof OnboardingMyCodePageRoute
  '/onboarding/nickname/': typeof OnboardingNicknamePageRoute
  '/onboarding/partner-code/': typeof OnboardingPartnerCodePageRoute
  '/onboarding/terms/': typeof OnboardingTermsPageRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chat'
    | '/chat/'
    | '/intro'
    | '/login'
    | '/onboarding/anniversary'
    | '/onboarding/complete'
    | '/onboarding/my-code'
    | '/onboarding/nickname'
    | '/onboarding/partner-code'
    | '/onboarding/terms'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/chat'
    | '/intro'
    | '/login'
    | '/onboarding/anniversary'
    | '/onboarding/complete'
    | '/onboarding/my-code'
    | '/onboarding/nickname'
    | '/onboarding/partner-code'
    | '/onboarding/terms'
  id:
    | '__root__'
    | '/'
    | '/chat'
    | '/chat/'
    | '/intro/'
    | '/login/'
    | '/onboarding/anniversary/'
    | '/onboarding/complete/'
    | '/onboarding/my-code/'
    | '/onboarding/nickname/'
    | '/onboarding/partner-code/'
    | '/onboarding/terms/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PageRoute: typeof PageRoute
  ChatLayoutRoute: typeof ChatLayoutRouteWithChildren
  IntroPageRoute: typeof IntroPageRoute
  LoginPageRoute: typeof LoginPageRoute
  OnboardingAnniversaryPageRoute: typeof OnboardingAnniversaryPageRoute
  OnboardingCompletePageRoute: typeof OnboardingCompletePageRoute
  OnboardingMyCodePageRoute: typeof OnboardingMyCodePageRoute
  OnboardingNicknamePageRoute: typeof OnboardingNicknamePageRoute
  OnboardingPartnerCodePageRoute: typeof OnboardingPartnerCodePageRoute
  OnboardingTermsPageRoute: typeof OnboardingTermsPageRoute
}

const rootRouteChildren: RootRouteChildren = {
  PageRoute: PageRoute,
  ChatLayoutRoute: ChatLayoutRouteWithChildren,
  IntroPageRoute: IntroPageRoute,
  LoginPageRoute: LoginPageRoute,
  OnboardingAnniversaryPageRoute: OnboardingAnniversaryPageRoute,
  OnboardingCompletePageRoute: OnboardingCompletePageRoute,
  OnboardingMyCodePageRoute: OnboardingMyCodePageRoute,
  OnboardingNicknamePageRoute: OnboardingNicknamePageRoute,
  OnboardingPartnerCodePageRoute: OnboardingPartnerCodePageRoute,
  OnboardingTermsPageRoute: OnboardingTermsPageRoute,
}

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/chat",
        "/intro/",
        "/login/",
        "/onboarding/anniversary/",
        "/onboarding/complete/",
        "/onboarding/my-code/",
        "/onboarding/nickname/",
        "/onboarding/partner-code/",
        "/onboarding/terms/"
      ]
    },
    "/": {
      "filePath": "page.tsx"
    },
    "/chat": {
      "filePath": "chat/layout.tsx",
      "children": [
        "/chat/"
      ]
    },
    "/chat/": {
      "filePath": "chat/page.tsx",
      "parent": "/chat"
    },
    "/intro/": {
      "filePath": "intro/page.tsx"
    },
    "/login/": {
      "filePath": "login/page.tsx"
    },
    "/onboarding/anniversary/": {
      "filePath": "onboarding/anniversary/page.tsx"
    },
    "/onboarding/complete/": {
      "filePath": "onboarding/complete/page.tsx"
    },
    "/onboarding/my-code/": {
      "filePath": "onboarding/my-code/page.tsx"
    },
    "/onboarding/nickname/": {
      "filePath": "onboarding/nickname/page.tsx"
    },
    "/onboarding/partner-code/": {
      "filePath": "onboarding/partner-code/page.tsx"
    },
    "/onboarding/terms/": {
      "filePath": "onboarding/terms/page.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
