/* tslint:disable */
/* eslint-disable */
/**
 * care1-api 사용자 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Configuration } from '../configuration'
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios'
import globalAxios from 'axios'
// Some imports not used depending on template conditions
// @ts-ignore
import {
  DUMMY_BASE_URL,
  assertParamExists,
  setApiKeyToObject,
  setBasicAuthToObject,
  setBearerAuthToObject,
  setOAuthToObject,
  setSearchParams,
  serializeDataIfNeeded,
  toPathString,
  createRequestFunction,
} from '../common'
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, type RequestArgs, BaseAPI, RequiredError, operationServerMap } from '../base'
// @ts-ignore
import type { PostVerificationConfirmReqDto } from '../models'
// @ts-ignore
import type { PostVerificationConfirmResDto } from '../models'
// @ts-ignore
import type { PostVerificationReqDto } from '../models'
// @ts-ignore
import type { PostVerificationResDto } from '../models'
/**
 * VerificatioinsApi - axios parameter creator
 * @export
 */
export const VerificatioinsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     *
     * @summary OTP 인증
     * @param {PostVerificationConfirmReqDto} postVerificationConfirmReqDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verificationsControllerConfirm: async (
      postVerificationConfirmReqDto: PostVerificationConfirmReqDto,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'postVerificationConfirmReqDto' is not null or undefined
      assertParamExists(
        'verificationsControllerConfirm',
        'postVerificationConfirmReqDto',
        postVerificationConfirmReqDto
      )
      const localVarPath = `/verifications/confirm`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers }
      localVarRequestOptions.data = serializeDataIfNeeded(
        postVerificationConfirmReqDto,
        localVarRequestOptions,
        configuration
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary OTP 생성 및 SMS 전송. 개발 서버에서는 Response에서 확인 가능
     * @param {PostVerificationReqDto} postVerificationReqDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verificationsControllerPhone: async (
      postVerificationReqDto: PostVerificationReqDto,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'postVerificationReqDto' is not null or undefined
      assertParamExists('verificationsControllerPhone', 'postVerificationReqDto', postVerificationReqDto)
      const localVarPath = `/verifications`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers }
      localVarRequestOptions.data = serializeDataIfNeeded(postVerificationReqDto, localVarRequestOptions, configuration)

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
  }
}

/**
 * VerificatioinsApi - functional programming interface
 * @export
 */
export const VerificatioinsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = VerificatioinsApiAxiosParamCreator(configuration)
  return {
    /**
     *
     * @summary OTP 인증
     * @param {PostVerificationConfirmReqDto} postVerificationConfirmReqDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async verificationsControllerConfirm(
      postVerificationConfirmReqDto: PostVerificationConfirmReqDto,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostVerificationConfirmResDto>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.verificationsControllerConfirm(
        postVerificationConfirmReqDto,
        options
      )
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0
      const localVarOperationServerBasePath =
        operationServerMap['VerificatioinsApi.verificationsControllerConfirm']?.[localVarOperationServerIndex]?.url
      return (axios, basePath) =>
        createRequestFunction(
          localVarAxiosArgs,
          globalAxios,
          BASE_PATH,
          configuration
        )(axios, localVarOperationServerBasePath || basePath)
    },
    /**
     *
     * @summary OTP 생성 및 SMS 전송. 개발 서버에서는 Response에서 확인 가능
     * @param {PostVerificationReqDto} postVerificationReqDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async verificationsControllerPhone(
      postVerificationReqDto: PostVerificationReqDto,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostVerificationResDto>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.verificationsControllerPhone(
        postVerificationReqDto,
        options
      )
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0
      const localVarOperationServerBasePath =
        operationServerMap['VerificatioinsApi.verificationsControllerPhone']?.[localVarOperationServerIndex]?.url
      return (axios, basePath) =>
        createRequestFunction(
          localVarAxiosArgs,
          globalAxios,
          BASE_PATH,
          configuration
        )(axios, localVarOperationServerBasePath || basePath)
    },
  }
}

/**
 * VerificatioinsApi - factory interface
 * @export
 */
export const VerificatioinsApiFactory = function (
  configuration?: Configuration,
  basePath?: string,
  axios?: AxiosInstance
) {
  const localVarFp = VerificatioinsApiFp(configuration)
  return {
    /**
     *
     * @summary OTP 인증
     * @param {VerificatioinsApiVerificationsControllerConfirmRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verificationsControllerConfirm(
      requestParameters: VerificatioinsApiVerificationsControllerConfirmRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<PostVerificationConfirmResDto> {
      return localVarFp
        .verificationsControllerConfirm(requestParameters.postVerificationConfirmReqDto, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary OTP 생성 및 SMS 전송. 개발 서버에서는 Response에서 확인 가능
     * @param {VerificatioinsApiVerificationsControllerPhoneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verificationsControllerPhone(
      requestParameters: VerificatioinsApiVerificationsControllerPhoneRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<PostVerificationResDto> {
      return localVarFp
        .verificationsControllerPhone(requestParameters.postVerificationReqDto, options)
        .then((request) => request(axios, basePath))
    },
  }
}

/**
 * Request parameters for verificationsControllerConfirm operation in VerificatioinsApi.
 * @export
 * @interface VerificatioinsApiVerificationsControllerConfirmRequest
 */
export interface VerificatioinsApiVerificationsControllerConfirmRequest {
  /**
   *
   * @type {PostVerificationConfirmReqDto}
   * @memberof VerificatioinsApiVerificationsControllerConfirm
   */
  readonly postVerificationConfirmReqDto: PostVerificationConfirmReqDto
}

/**
 * Request parameters for verificationsControllerPhone operation in VerificatioinsApi.
 * @export
 * @interface VerificatioinsApiVerificationsControllerPhoneRequest
 */
export interface VerificatioinsApiVerificationsControllerPhoneRequest {
  /**
   *
   * @type {PostVerificationReqDto}
   * @memberof VerificatioinsApiVerificationsControllerPhone
   */
  readonly postVerificationReqDto: PostVerificationReqDto
}

/**
 * VerificatioinsApi - object-oriented interface
 * @export
 * @class VerificatioinsApi
 * @extends {BaseAPI}
 */
export class VerificatioinsApi extends BaseAPI {
  /**
   *
   * @summary OTP 인증
   * @param {VerificatioinsApiVerificationsControllerConfirmRequest} requestParameters Request parameters.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof VerificatioinsApi
   */
  public verificationsControllerConfirm(
    requestParameters: VerificatioinsApiVerificationsControllerConfirmRequest,
    options?: RawAxiosRequestConfig
  ) {
    return VerificatioinsApiFp(this.configuration)
      .verificationsControllerConfirm(requestParameters.postVerificationConfirmReqDto, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary OTP 생성 및 SMS 전송. 개발 서버에서는 Response에서 확인 가능
   * @param {VerificatioinsApiVerificationsControllerPhoneRequest} requestParameters Request parameters.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof VerificatioinsApi
   */
  public verificationsControllerPhone(
    requestParameters: VerificatioinsApiVerificationsControllerPhoneRequest,
    options?: RawAxiosRequestConfig
  ) {
    return VerificatioinsApiFp(this.configuration)
      .verificationsControllerPhone(requestParameters.postVerificationReqDto, options)
      .then((request) => request(this.axios, this.basePath))
  }
}
